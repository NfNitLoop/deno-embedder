{
    "tasks": {
        // This task starts Deno Embedder's "Dev Mode", which will watch for
        // updates to your static files and regenerate the embedded versions
        // as necessary.
        // 
        // Permissions:
        // Deno Embedder needs read and write access to your project directory.
        // It also needs access to run processes (ex: `deno task start`).
        "dev": "deno run -A embedder.ts dev --task start",

        // By default, Deno Embedder will call to your "start" task to
        // run the server once it has created embedded versions of your files.
        // It's recommended to use --watch here so that your server will restart
        // if Deno Embedder updates the embeds.
        "start": "deno run --allow-net=0.0.0.0:8000 --watch server.ts",

        // Since all your static files are now TypeScript code, they all get
        // included in the bundle created by `deno compile`! ðŸŽ‰
        "compile": "deno compile server.ts",

        // The simplest way to regenerate files is to just run your project in
        // "dev" mode, above, but you also have the option to just do a one-off
        // "build" of the embedded files like this:
        "build-embeds": "deno run -A embedder.ts build",

        "check": "deno check server.ts browserCode/app.ts"
    },
    "compilerOptions": {
        "lib": [
            "dom", // Because we're writing code targeting the browser.
            "deno.window"
        ]
    }
}