{
    "name": "@nfnitloop/deno-embedder",
    "version": "1.6.0",
    "exports": {
        ".": "./src/mod.ts",
        "./plugins/plugins": "./src/plugins/plugins.ts",
        "./plugins/esbuild": "./src/plugins/esbuild.ts",
        "./helpers/oak": "./src/helpers/oak.ts",
        "./helpers/hono": "./src/helpers/hono.ts",

        // Allows easily running the example server:
        "./examples/with-embedder": "./examples/with-embedder/server.ts",
        // Allows code examples which can be checked at build time, & run independently:
        // !! Currently complains about complex export types. Fix with a wrapper w/ explicit types.
        // TODO: "./examples/with-embedder/staticDir": "./examples/with-embedder/embed/static/dir.ts",

        "./examples/oak": "./examples/with-embedder/server.ts",
        "./examples/hono": "./examples/hono/server.ts",

        // Needs to be exposed so that embedded files can import w/ JSR syntax. You shouldn't use this directly.
        "./embed.ts": "./src/embed.ts"
    },
    "publish": {
        "include": [
            "README.md",
            "src/**/*.ts",
            "examples/with-embedder/**/*.ts",
            "examples/hono/**/*.ts"
        ]
    },
    "tasks": {
        // Run the full test suite:
        "test": "deno task check && deno task examples:test && deno task test:jsx && deno task lints",

        // Since this directory has its own deno.jsonc, we need to test it explicitly:
        "test:jsx": "cd tests/jsx_config && deno test -A",

        "check": "deno task check:main && deno task check:without-embedder && deno task examples:build && deno task examples:check && deno task check:publish",
        "check:main": "./tools/with-exports.ts deno check --doc",
        "check:publish": "deno publish --dry-run --allow-dirty",
        "check:without-embedder": "cd examples/without-embedder; deno task check",

        "examples:check": "deno task oak:check && deno task hono:check",
        "examples:build": "deno task oak:build && deno task hono:build",
        "examples:test": "deno task oak:test && deno task hono:test",

        "oak:check": "cd examples/with-embedder; deno task check",
        "oak:test": "cd examples/with-embedder && deno test -A --trace-leaks",
        "oak:build": "cd examples/with-embedder && deno task build-embeds",
        "oak:start": "cd examples/with-embedder && deno task start",

        "hono:check": "cd examples/hono; deno task check",
        "hono:test": "cd examples/hono && deno test -A",
        "hono:build": "cd examples/hono && deno task build-embeds",
        "hono:start": "cd examples/hono && deno task start",

        "lints": "deno lint && deno task lints:docs",
        "lints:docs": "./tools/with-exports.ts deno doc --lint"
    },
    "lint": {
        "rules": {
            "exclude": [
                // See: https://github.com/denoland/deno_lint/issues/1125
                "prefer-const",
            ]
        },
        "exclude": [
            "tests/jsr_paths/typescript_error",
            "tests/jsr_paths/spaces_error",
        ]
    },
    "test": {
        "exclude": [
            // Has example code that references theoretical modules:
            "README.md",
            // Pseudocode doc block example:
            "src/helpers/hono.ts"
        ]
    }
}